- Simplify building UI
- Core feature is Component
    - All UI are made of components. Made of different building blocks
    - All UI can be split in this way
    - React just tells you how to fuse them together
- Reusability (DRY) AND Separation of Concerns (Feature only does 1 thing)
- Builds on idea of splitting code for above two concerns
- React is Decalarative
    - HTML/CSS/JS constitute a component
    - Build reusable and reactive components
    - 'Declarative': do not tell when to insert element in UI
        - You define end state and then React handles DOM instructions
        - You DO NOT write DOM instructions on your own
- Analyzing a project
    - index.js is the first page that is executed
    - js transformed to HTML
    - index.html is what is loaded by the browser (SPA)
    - Components need to be imported
    - JSX valid because of transformations happening behind the scenes
- JSX
    - Syntax that usually would not work but then transformed to work in the browser
- How react works
    - Building own HTML elements
    - Create 'reactive' components, declarative because you define the end state and react generates instructions to render
        - Regular JS in the browser is imperative because you give instructions for what browser to do 
- Component tree with root at the top and then the rest have differnet parts but only root is rendered
- Component is just a JS function that returns JSX
    - Lower case elements are built in and upper case are those custom to the project
- Only 1 return element per JSX code snippet