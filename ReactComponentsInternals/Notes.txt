- Component classes should have lean render method
- In arrow function can use prentheses and will omit return statement
- Less class based components allows for easy to follow data flow, more predictable and manageable
- Class Based: state and props are properties of , instead of just recieving props as argument
- Class based component lifecyle: fire automatically at certain points in time in the application
	- No side-effects in constructor, cause re-renders and take performance hit
- Invoking super() will invoke constructor of component that is being extended  
- Using state will behind the scenes call constuctor and set values
- getSnapshot will return data that comes in componentDidUpdate
	- Save data before update and then access it after the update
- Did update is for checking if it has receieved new data
- Render after should component update, prop lifecycles are then all after the render; state lifecyles like did mount and did update are also after render
- 'use' lifecyle methods are for accessing lifecyle when in functonal component
	- useEffect - react hook for all lifecyle methods in the application. Function executes for every render cycle
		- Essentially a combination of did mount and did update
		- Array as second argument of data that should effect change, empty array will mean no dependencies so only runs trhe first time and never again
- 